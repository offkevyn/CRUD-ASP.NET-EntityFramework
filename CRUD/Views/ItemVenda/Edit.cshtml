@model CRUD.Models.ItemVenda

@{
    ViewBag.Title = "Edit";
}

<div class="conteudo">
    <h2>Editar</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Item Venda</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idItemVenda)

            <div class="form-group">
                @Html.LabelFor(model => model.idVenda, "idVenda", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.idVenda, null, "", new { @class = "form-control", @id = "dpdVenda" })
                    @Html.ValidationMessageFor(model => model.idVenda, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idProduto, "idProduto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.idProduto, null, "Selecione o produto", new { @class = "form-control", @id = "dpdProduto" })
                    @Html.ValidationMessageFor(model => model.idProduto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.qtd, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.qtd, new { htmlAttributes = new { min = 1, @class = "form-control", @id = "inpQtd" } })
                    @Html.ValidationMessageFor(model => model.qtd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="vlUnit">Valor unitário:</label>
                <div class="col-md-10">
                    <input readonly type="text" class="form-control" id="inpVlUnit" name="vlUnit" value="">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.valor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.valor, new { htmlAttributes = new { @class = "form-control", @id = "inpValorTot" } })
                    @Html.ValidationMessageFor(model => model.valor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Savar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("De volta à lista", "Index")
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

        var listProduto;
        var produtoSelecionado;



        $(document).ready(function () {
            $.ajax({
                type: 'GET',
                url: "/Produto/GetProduto",
                dataType: 'json',
                data: {},
                success: function (mems) {
                    listProduto = mems;

                    listProduto.forEach(function (produto, index) {
                        if (produto.idProduto == $("#dpdProduto").val()) {
                            $("#inpVlUnit").val(produto.valor);
                            produtoSelecionado = produto;
                        }
                    });
                },
                error: function (ex) {
                    alert('Năo foi possível obter dados.');
                }
            });
        });

        $("#dpdProduto").on("change", function () {
            listProduto.forEach(function (produto, index) {
                if (produto.idProduto == $("#dpdProduto").val()) {
                    $("#inpVlUnit").val(produto.valor);
                    produtoSelecionado = produto;
                }
            });
            $("#inpQtd").val(null);
            $("#inpValorTot").val(null);
        });

        $("#inpValorTot").prop("readonly", true);

        $("#inpQtd").on("change", function () {
            $("#inpValorTot").val($("#inpQtd").val() * produtoSelecionado.valorFloat);
        });

        $("#dpdVenda").prop("disabled", true);

        jQuery(function () {

            jQuery('form').bind('submit', function () {
                jQuery(this).find(':disabled').removeAttr('disabled');
            });

        });
    </script>
}
